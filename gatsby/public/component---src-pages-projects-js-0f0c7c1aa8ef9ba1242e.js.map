{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/components/ProjectList.js","webpack:///./src/pages/projects.js"],"names":["PaginationStyles","styled","div","Pagination","pageSize","totalCount","currentPage","base","skip","totalPages","Math","ceil","prevPage","nextPage","hasNextPage","hasPrevPage","disabled","to","Array","from","length","map","_","i","className","key","ProjectListStyles","SingleProjectStyles","SingleProject","project","slug","current","name","fluid","image","asset","alt","ProjectList","projects","id","ProjectsPage","data","pageContext","nodes","SEO","title","parseInt","process"],"mappings":"6LAIMA,EAAmBC,IAAOC,IAAV,mFAAGD,CAAH,oPAoBP,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,SACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,YAEAC,GACC,EAFDC,KAEC,EADDD,MAEME,EAAaC,KAAKC,KAAKN,EAAaD,GACpCQ,EAAWN,EAAc,EACzBO,EAAWP,EAAc,EACzBQ,EAAcD,GAAYJ,EAC1BM,EAAcH,GAAY,EAChC,OACE,kBAACZ,EAAD,KACE,kBAAC,IAAD,CAAMgB,UAAWD,EAAaE,GAAOV,EAAL,IAAaK,GAA7C,SAGCM,MAAMC,KAAK,CAAEC,OAAQX,IAAcY,KAAI,SAACC,EAAGC,GAAJ,OACtC,kBAAC,IAAD,CACEC,UAA2B,IAAhBlB,GAA2B,IAANiB,EAAU,UAAY,GACtDN,GAAOV,EAAL,KAAagB,EAAI,EAAIA,EAAI,EAAI,IAC/BE,IAAKF,EAAI,GAERA,EAAI,MAGT,kBAAC,IAAD,CAAMP,UAAWF,EAAaG,GAAOV,EAAL,IAAaM,GAA7C,U,yBC7CAa,EAAoBzB,IAAOC,IAAV,oFAAGD,CAAH,8EAOjB0B,EAAsB1B,IAAOC,IAAV,sFAAGD,CAAH,qZAmCzB,SAAS2B,EAAT,GAAqC,IAAZC,EAAW,EAAXA,QACvB,OACE,kBAACF,EAAD,KACE,kBAAC,IAAD,CAAMV,GAAE,aAAeY,EAAQC,KAAKC,SAClC,4BAAKF,EAAQG,MACb,yBAAKR,UAAU,mBACb,kBAAC,IAAD,CAAKS,MAAOJ,EAAQK,MAAMC,MAAMF,MAAOG,IAAKP,EAAQG,UAM/C,SAASK,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,OACE,kBAACZ,EAAD,KACGY,EAASjB,KAAI,SAACQ,GAAD,OACZ,kBAACD,EAAD,CAAeC,QAASA,EAASJ,IAAKI,EAAQU,S,gBCzDvC,SAASC,EAAT,GAA8C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACrCJ,EAAWG,EAAKH,SAASK,MAC/B,OACE,oCACE,kBAACC,EAAA,EAAD,CAAKC,MAAK,oBAAqBH,EAAYpC,aAAe,KAC1D,kBAACH,EAAD,CACEC,SAAU0C,SAASC,KACnB1C,WAAYoC,EAAKH,SAASjC,WAC1BC,YAAaoC,EAAYpC,aAAe,EACxCE,KAAMkC,EAAYlC,KAClBD,KAAK,cAEP,kBAAC8B,EAAD,CAAaC,SAAUA","file":"component---src-pages-projects-js-0f0c7c1aa8ef9ba1242e.js","sourcesContent":["import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PaginationStyles = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-items: center;\r\n  text-align: center;\r\n  & > * {\r\n    padding: 1rem;\r\n    flex: 1;\r\n    text-decoration: none;\r\n    &[aria-current],\r\n    &.current {\r\n      color: var(--orange);\r\n    }\r\n    &[disabled] {\r\n      pointer-events: none;\r\n      color: var(--grey);\r\n    }\r\n  }\r\n`;\r\nexport default function Pagination({\r\n  pageSize,\r\n  totalCount,\r\n  currentPage,\r\n  skip,\r\n  base,\r\n}) {\r\n  const totalPages = Math.ceil(totalCount / pageSize);\r\n  const prevPage = currentPage - 1;\r\n  const nextPage = currentPage + 1;\r\n  const hasNextPage = nextPage <= totalPages;\r\n  const hasPrevPage = prevPage >= 1;\r\n  return (\r\n    <PaginationStyles>\r\n      <Link disabled={!hasPrevPage} to={`${base}/${prevPage}`}>\r\n        &#8592;Prev\r\n      </Link>\r\n      {Array.from({ length: totalPages }).map((_, i) => (\r\n        <Link\r\n          className={currentPage === 1 && i === 0 ? 'current' : ''}\r\n          to={`${base}/${i > 0 ? i + 1 : ''}`}\r\n          key={i + 1}\r\n        >\r\n          {i + 1}\r\n        </Link>\r\n      ))}\r\n      <Link disabled={!hasNextPage} to={`${base}/${nextPage}`}>\r\n        Next&#x2192;\r\n      </Link>\r\n    </PaginationStyles>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Img from 'gatsby-image';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'gatsby';\r\n\r\nconst ProjectListStyles = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 3rem;\r\n  margin: 4rem 0;\r\n`;\r\n\r\nconst SingleProjectStyles = styled.div`\r\n  .image-container {\r\n    overflow: hidden;\r\n  }\r\n  .gatsby-image-wrapper {\r\n    height: 30vh;\r\n    transition: 1s;\r\n    &:hover {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n  a {\r\n    display: grid;\r\n    text-decoration: none;\r\n    position: relative;\r\n  }\r\n  h2 {\r\n    color: var(--white);\r\n    text-transform: capitalize;\r\n    font-size: 3rem;\r\n    text-align: center;\r\n    position: absolute;\r\n    width: 100%;\r\n    z-index: 1;\r\n    padding: 1.5rem 0;\r\n    // fading background on heading for white font to contrast more\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(0, 0, 0, 0.8),\r\n      hsla(0, 0%, 100%, 0) 90%,\r\n      hsla(0, 0%, 100%, 0)\r\n    );\r\n  }\r\n`;\r\n\r\nfunction SingleProject({ project }) {\r\n  return (\r\n    <SingleProjectStyles>\r\n      <Link to={`/projects/${project.slug.current}`}>\r\n        <h2>{project.name}</h2>\r\n        <div className=\"image-container\">\r\n          <Img fluid={project.image.asset.fluid} alt={project.name} />\r\n        </div>\r\n      </Link>\r\n    </SingleProjectStyles>\r\n  );\r\n}\r\nexport default function ProjectList({ projects }) {\r\n  return (\r\n    <ProjectListStyles>\r\n      {projects.map((project) => (\r\n        <SingleProject project={project} key={project.id} />\r\n      ))}\r\n    </ProjectListStyles>\r\n  );\r\n}\r\n","import { graphql } from 'gatsby';\r\nimport React from 'react';\r\nimport Pagination from '../components/Pagination';\r\nimport ProjectList from '../components/ProjectList';\r\nimport SEO from '../components/SEO';\r\n\r\nexport default function ProjectsPage({ data, pageContext }) {\r\n  const projects = data.projects.nodes;\r\n  return (\r\n    <>\r\n      <SEO title={`Projects - Page ${pageContext.currentPage || 1}`} />\r\n      <Pagination\r\n        pageSize={parseInt(process.env.GATSBY_PAGE_SIZE)}\r\n        totalCount={data.projects.totalCount}\r\n        currentPage={pageContext.currentPage || 1}\r\n        skip={pageContext.skip}\r\n        base=\"/projects\"\r\n      />\r\n      <ProjectList projects={projects} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query ProjectQuery($skip: Int = 0, $pageSize: Int = 6) {\r\n    projects: allSanityProject(limit: $pageSize, skip: $skip) {\r\n      totalCount\r\n      nodes {\r\n        name\r\n        description\r\n        id\r\n        slug {\r\n          current\r\n        }\r\n        image {\r\n          asset {\r\n            fluid(maxWidth: 400) {\r\n              ...GatsbySanityImageFluid\r\n            }\r\n          }\r\n        }\r\n        service {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}